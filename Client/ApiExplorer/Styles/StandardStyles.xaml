<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource {x:Type TextBlock}}">
    <Setter Property="FontSize" Value="14"/>
  </Style>
  <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
    <Setter Property="FontSize" Value="14"/>
  </Style>
  <Style x:Key="FormHeading" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource {x:Type TextBlock}}">
    <Setter Property="FontSize" Value="16"/>
    <Setter Property="FontWeight" Value="Bold"/>
  </Style>
  <Style x:Key="Label" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource {x:Type TextBlock}}">
    <Setter Property="FontSize" Value="14"/>
    <Setter Property="FontWeight" Value="Bold"/>
    <Setter Property="Margin" Value="0 0 6 0"/>
  </Style>
  <Style x:Key="Description" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource {x:Type TextBlock}}">
    <Setter Property="FontStyle" Value="Italic"/>
    <Setter Property="Foreground" Value="Gray"/>
  </Style>
  <Style x:Key="ParamInfo" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource {x:Type TextBlock}}">
    <Setter Property="FontSize" Value="12"/>
    <Setter Property="FontStyle" Value="Italic"/>
  </Style>
  <Style x:Key="Readonly" TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
    <Setter Property="BorderBrush" Value="Transparent"/>
  </Style>
  
  <!-- Resource expander -->
  <!-- Expander button (http://www.codeproject.com/Articles/248112/Templating-WPF-Expander-Control) -->
  <ControlTemplate x:Key="ResourceExpanderButtonTemp" TargetType="{x:Type ToggleButton}">
    <Border x:Name="ExpanderButtonBorder"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            Padding="{TemplateBinding Padding}">
      <Grid>
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="Auto"/>
          <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Rectangle Fill="Transparent" Grid.ColumnSpan="2"/>
        <Ellipse Name="Circle"
                 Grid.Column="0"
                 Stroke="DarkGray"
                 Width="12"
                 Height="12"
                 HorizontalAlignment="Center"
                 VerticalAlignment="Center"/>
        <Path x:Name="Sign"
              Grid.Column="0"
              Data="M 0,3 H 6 M 3,0 V 6 Z"
              Stroke="#FF666666"
              Width="6"
              Height="6"
              StrokeThickness="2"
              HorizontalAlignment="Center"
              VerticalAlignment="Center"
              RenderTransformOrigin="0.5,0.5">
          <Path.RenderTransform>
            <RotateTransform Angle="0"/>
          </Path.RenderTransform>
        </Path>
        <ContentPresenter x:Name="HeaderContent"
                            Grid.Column="1"
                            Margin="4,0,0,0"
                            ContentSource="Content"/>
      </Grid>
    </Border>
    <ControlTemplate.Triggers>
      <!--Change the sign to minus when toggled-->
      <Trigger Property="IsChecked" Value="True">
        <Setter Property="Data" TargetName="Sign" Value="M 0,3 H 6 Z"/>
      </Trigger>

      <!-- MouseOver, Pressed behaviours-->
      <Trigger Property="IsMouseOver" Value="true">
        <Setter Property="Stroke" Value="#FF3C7FB1" TargetName="Circle"/>
        <Setter Property="Stroke" Value="#222" TargetName="Sign"/>
      </Trigger>
      <Trigger Property="IsPressed" Value="true">
        <Setter Property="Stroke" Value="#FF526C7B" TargetName="Circle"/>
        <Setter Property="StrokeThickness" Value="1.5" TargetName="Circle"/>
        <Setter Property="Stroke" Value="#FF003366" TargetName="Sign"/>
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>

  <Style x:Key="ResourceExpander" TargetType="Expander">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Expander">
          <Grid>
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto"/>
              <RowDefinition Height="Auto" Name="ContentRow"/>
            </Grid.RowDefinitions>
            <StackPanel Grid.Row="0" Orientation="Horizontal">
              <ContentPresenter ContentSource="Header"/>
              <ToggleButton IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                              OverridesDefaultStyle="True"
                              Margin="4 0 0 0"
                              Template="{StaticResource ResourceExpanderButtonTemp}">
              </ToggleButton>
            </StackPanel>
            <Border Grid.Row="1" BorderBrush="LightGray" BorderThickness="1,0,0,0" Padding="8 0 0 0" Margin="8 2 0 2"
                      Name="Content"
                      Visibility="Collapsed">
              <ContentPresenter/>
            </Border>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsExpanded" Value="True">
              <Setter TargetName="Content" Property="Visibility" Value="Visible"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
</ResourceDictionary>