<UserControl x:Class="ApiExplorer.MediaTypeHandlers.ApplicationMason.UserControls.ApplicationMasonRender"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             xmlns:mcmd="clr-namespace:GalaSoft.MvvmLight.Command;assembly=GalaSoft.MvvmLight.Extras.WPF45"
             xmlns:axv="clr-namespace:ApiExplorer.ValueConverters"
             xmlns:axu="clr-namespace:ApiExplorer.Utilities"
             xmlns:mavm="clr-namespace:ApiExplorer.MediaTypeHandlers.ApplicationMason.ViewModels">
  <UserControl.Resources>
    <!-- Expander button (http://www.codeproject.com/Articles/248112/Templating-WPF-Expander-Control) -->
    <ControlTemplate x:Key="SimpleExpanderButtonTemp" TargetType="{x:Type ToggleButton}">
      <Border x:Name="ExpanderButtonBorder"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            Padding="{TemplateBinding Padding}">
        <Grid>
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="*"/>
          </Grid.ColumnDefinitions>
          <Rectangle Fill="Transparent" Grid.ColumnSpan="2"/>
          <Ellipse Name="Circle"
                 Grid.Column="0"
                 Stroke="DarkGray"
                 Width="12"
                 Height="12"
                 HorizontalAlignment="Center"
                 VerticalAlignment="Center"/>
          <Path x:Name="Sign"
              Grid.Column="0"
              Data="M 0,3 H 6 M 3,0 V 6 Z"
              Stroke="#FF666666"
              Width="6"
              Height="6"
              StrokeThickness="2"
              HorizontalAlignment="Center"
              VerticalAlignment="Center"
              RenderTransformOrigin="0.5,0.5">
            <Path.RenderTransform>
              <RotateTransform Angle="0"/>
            </Path.RenderTransform>
          </Path>
          <ContentPresenter x:Name="HeaderContent"
                            Grid.Column="1"
                            Margin="4,0,0,0"
                            ContentSource="Content"/>
        </Grid>
      </Border>
      <ControlTemplate.Triggers>
        <!--Change the sign to minus when toggled-->
        <Trigger Property="IsChecked" Value="True">
          <Setter Property="Data" TargetName="Sign" Value="M 0,3 H 6 Z"/>
        </Trigger>

        <!-- MouseOver, Pressed behaviours-->
        <Trigger Property="IsMouseOver" Value="true">
          <Setter Property="Stroke" Value="#FF3C7FB1" TargetName="Circle"/>
          <Setter Property="Stroke" Value="#222" TargetName="Sign"/>
        </Trigger>
        <Trigger Property="IsPressed" Value="true">
          <Setter Property="Stroke" Value="#FF526C7B" TargetName="Circle"/>
          <Setter Property="StrokeThickness" Value="1.5" TargetName="Circle"/>
          <Setter Property="Stroke" Value="#FF003366" TargetName="Sign"/>
        </Trigger>
      </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="Expander">
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="Expander">
            <Grid>
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto" Name="ContentRow"/>
              </Grid.RowDefinitions>
              <StackPanel Grid.Row="0" Orientation="Horizontal">
                <ContentPresenter ContentSource="Header"/>
                <ToggleButton IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                              OverridesDefaultStyle="True"
                              Margin="4 0 0 0"
                              Template="{StaticResource SimpleExpanderButtonTemp}">
                </ToggleButton>
              </StackPanel>
              <Border Grid.Row="1" BorderBrush="LightGray" BorderThickness="1,0,0,0" Padding="8 0 0 0" Margin="8 2 0 2"
                      Name="Content"
                      Visibility="Collapsed">
                <ContentPresenter/>
              </Border>
            </Grid>
            <ControlTemplate.Triggers>
              <Trigger Property="IsExpanded" Value="True">
                <Setter TargetName="Content" Property="Visibility" Value="Visible"/>
              </Trigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    
    <!-- Template for displaying resource (recursively) -->
    <DataTemplate DataType="{x:Type mavm:ResourcePropertyViewModel}">
      <Expander IsExpanded="{Binding IsExpanded}">
        <Expander.Header>
          <TextBlock Text="{Binding Name}" FontWeight="Bold">
            <i:Interaction.Behaviors>
              <axu:ShowSourceBehavior Prefix="{Binding Name, StringFormat='{}{0}: '}"/>
            </i:Interaction.Behaviors>
          </TextBlock>
        </Expander.Header>
        <Grid>
          <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
          </Grid.RowDefinitions>
          <!-- Description -->
          <TextBlock Grid.Row="0" Text="{Binding Value.Description}" FontStyle="Italic" Foreground="Gray"
                     Visibility="{Binding Value.HasDescription, Converter={axv:BoolToVisibilityConverter}}">
            <i:Interaction.Behaviors>
              <axu:ShowSourceBehavior Source="{Binding Value.MetaJsonValue}" Prefix="mason:meta: "/>
            </i:Interaction.Behaviors>
          </TextBlock>
          <!-- Links -->
          <StackPanel Grid.Row="1" Visibility="{Binding Value.HasLinks, Converter={axv:BoolToVisibilityConverter}}">
            <TextBlock Text="Links" FontStyle="Italic" FontWeight="Bold">
              <!-- Show source for links -->
              <i:Interaction.Behaviors>
                <axu:ShowSourceBehavior Source="{Binding Value.LinksJsonValue}" Prefix="mason:links: "/>
              </i:Interaction.Behaviors>
            </TextBlock>
            <ItemsControl ItemsSource="{Binding Value.Links}" Margin="10 0 0 0">
              <ItemsControl.ItemTemplate>
                <DataTemplate>
                  <TextBlock>
                      <Hyperlink Command="{Binding FollowLinkCommand}"
                                 ToolTip="{Binding Title}">
                        <!-- Updates status line -->
                        <i:Interaction.Triggers>
                          <i:EventTrigger EventName="MouseEnter">
                            <mcmd:EventToCommand Command="{Binding SetStatusCommand}"/>
                          </i:EventTrigger>
                          <i:EventTrigger EventName="MouseLeave">
                            <mcmd:EventToCommand Command="{Binding ResetStatusCommand}"/>
                          </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <TextBlock Text="{Binding Rel}"/>
                      </Hyperlink>
                    </TextBlock>
                </DataTemplate>
              </ItemsControl.ItemTemplate>
            </ItemsControl>
          </StackPanel>
          <!-- Properties (recursion) -->
          <ItemsControl Grid.Row="2" DockPanel.Dock="Top" ItemsSource="{Binding Value.Properties}"/>
        </Grid>
      </Expander>
    </DataTemplate>
    
    <!-- Template for displaying simple property -->
    <DataTemplate DataType="{x:Type mavm:PropertyViewModel}">
      <StackPanel Orientation="Horizontal">
        <TextBlock Text="{Binding Name, StringFormat='{}{0}: '}" FontWeight="Bold">
            <i:Interaction.Behaviors>
              <axu:ShowSourceBehavior Prefix="{Binding Name, StringFormat='{}{0}: '}"/>
            </i:Interaction.Behaviors>
        </TextBlock>
        <TextBlock Text="{Binding Value}"/>
      </StackPanel>
    </DataTemplate>
  
  </UserControl.Resources>
  
  <Grid>
    <Grid.RowDefinitions>
      <RowDefinition Height="*"/>
    </Grid.RowDefinitions>
    <Grid.ColumnDefinitions>
      <ColumnDefinition Width="*"/>
      <ColumnDefinition Width="Auto"/>
      <ColumnDefinition Width="*"/>
    </Grid.ColumnDefinitions>

    <!-- UI (left side) -->
    <DockPanel Grid.Column="0" LastChildFill="True" Margin="8">
      <!--<TextBlock DockPanel.Dock="Top" FontWeight="Bold" FontSize="14" Margin="0 0 0 10" Text="Resource"/>-->
      <ContentPresenter Content="{Binding MainProperty}"/>
    </DockPanel>

    <!-- Splitter -->
    <GridSplitter Grid.Column="1" HorizontalAlignment="Right" VerticalAlignment="Stretch" 
                  ResizeBehavior="PreviousAndNext"
                  Width="5" Background="Gray"/>
    
    <!-- Source (right column) -->
    <DockPanel Grid.Column="2" LastChildFill="True" Margin="8">
      <TextBlock DockPanel.Dock="Top" FontWeight="Bold" FontSize="14" Margin="0 0 0 10" Text="Source"/>
      <TextBox DockPanel.Dock="Top" Text="{Binding Source}"
             IsReadOnly="True" AcceptsReturn="True" TextWrapping="NoWrap" Width="Auto" 
             HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto"
             FontFamily="Courier New"/>
    </DockPanel>
  </Grid>
</UserControl>
